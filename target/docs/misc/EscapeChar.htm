<!DOCTYPE HTML>
<html lang="pt-BR">
<head>
<title>Escape Sequences - Definition &amp; Usage | AutoHotkey</title>
<meta name="description" content="Escape sequences are used to indicate that specific characters should be interpreted differently than they normally would." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Escape Sequences</h1>
<p>The escape character <code>`</code> (back-tick or grave accent) is used to indicate that the character immediately following it should be interpreted differently than it normally would. This character is at the upper left corner of most English keyboards.</p>
<p>In AutoHotkey the following escape sequences can be used (when the accent is the escape character):</p>
<table class="info">
  <tr>
    <th abbr="Seq">Sequence</th>
    <th>Result</th>
  </tr>
  <tr>
    <td><code>`,</code></td>
    <td>
      <p><code>,</code> (literal comma)</p>
      <p class="note"><strong>Note:</strong> Commas that appear within the last parameter of a command do not need to be escaped because the program knows to treat them literally (but it is best to escape them anyway, for clarity). The same is true for all parameters of <a href="../lib/MsgBox.htm">MsgBox</a> because it has smart comma handling.</p>
    </td>
  </tr>
  <tr>
    <td><code>`%</code></td>
    <td><code>%</code> (literal percent)</td>
  </tr>
  <tr>
    <td><code>``</code></td>
    <td><code>`</code> (literal accent; i.e. two consecutive escape characters result in a single literal character)</td>
  </tr>
  <tr>
    <td><code>`;</code></td>
    <td>
      <p><code class="no-highlight">;</code> (literal semicolon)</p>
      <p class="note"><strong>Note:</strong> It is not necessary to escape a semicolon which has any character <u>other than</u> space or tab to its immediate left, since it would not be interpreted as a comment anyway.</p>
    </td>
  </tr>
  <tr>
    <td><code>`::</code></td>
    <td><code>::</code> (literal pair of colons). <span class="ver">[v1.0.40+]</span>: It is no longer necessary to escape these, except when used literally in a <a href="../Hotstrings.htm">hotstring</a>'s replacement text.</td>
  </tr>
  <tr>
    <td><code>`n</code></td>
    <td>newline (linefeed/LF)</td>
  </tr>
  <tr>
    <td><code>`r</code></td>
    <td>carriage return (CR)</td>
  </tr>
  <tr>
    <td><code>`b</code></td>
    <td>backspace</td>
  </tr>
  <tr>
    <td><code>`t</code></td>
    <td>tab (the more typical horizontal variety)</td>
  </tr>
  <tr>
    <td><code>`v</code></td>
    <td>vertical tab -- corresponds to Ascii value 11. It can also be manifest in some applications by typing <kbd>Ctrl</kbd>+<kbd>K</kbd>.</td>
  </tr>
  <tr>
    <td><code>`a</code></td>
    <td>alert (bell) -- corresponds to Ascii value 7. It can also be manifest in some applications by typing <kbd>Ctrl</kbd>+<kbd>G</kbd>.</td>
  </tr>
  <tr>
    <td><code>`f</code></td>
    <td>formfeed -- corresponds to Ascii value 12. It can also be manifest in some applications by typing <kbd>Ctrl</kbd>+<kbd>L</kbd>.</td>
  </tr>
  <tr>
    <td><code class="no-highlight">""</code></td>
    <td>Within an <a href="../Variables.htm#Expressions">expression</a>, two consecutive quotes enclosed inside a literal string resolve to a single literal quote. Por exemplo: <code>Var := "The color ""red"" was found."</code>.</td>
  </tr>
</table>

<h2 id="Remarks">Remarks</h2>
<p>When the <a href="../lib/Send.htm">Send command</a> or <a href="../Hotstrings.htm">Hotstrings</a> are used in their default (non-raw) mode, characters such as <code>{}^!+#</code> have special meaning. Therefore, to use them literally in these cases, enclose them in braces. Por exemplo: <code>Send {<strong>^</strong>}{<strong>!</strong>}{<strong>{</strong>}</code>.</p>

<h2 id="Examples">Exemplos</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Reports a multi-line string. The lines are separated by a linefeed character.</p>
<pre>MsgBox % "Line 1`nLine 2"</pre>
</div>

</body>
</html>
